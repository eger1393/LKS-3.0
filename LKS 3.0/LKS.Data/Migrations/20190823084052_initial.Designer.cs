// <auto-generated />
using LKS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LKS.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190823084052_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("LKS.Data.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Collness");

                    b.Property<string>("Command");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Rank")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("LKS.Data.Models.Assessment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MethodologicalLevel");

                    b.Property<int>("ProtocolOneFinal");

                    b.Property<int>("ProtocolOnePractice");

                    b.Property<int>("ProtocolOneTheory");

                    b.Property<int>("SportLevel");

                    b.HasKey("Id");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("LKS.Data.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("ParentCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LKS.Data.Models.Cycle", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Number");

                    b.Property<string>("SpecialityName");

                    b.Property<string>("VUS");

                    b.HasKey("Id");

                    b.ToTable("Cycles");

                    b.HasData(
                        new { Id = "1", Number = "4", SpecialityName = "ТОР", VUS = "042600" }
                    );
                });

            modelBuilder.Entity("LKS.Data.Models.Prepod", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalInfo");

                    b.Property<int>("Coolness");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("PrepodRank");

                    b.HasKey("Id");

                    b.ToTable("Prepods");
                });

            modelBuilder.Entity("LKS.Data.Models.Relative", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Birthday");

                    b.Property<string>("FirstName");

                    b.Property<string>("HealthStatus");

                    b.Property<string>("LastName");

                    b.Property<string>("MaidenName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("MobilePhone");

                    b.Property<string>("PlaceOfRegestration");

                    b.Property<string>("PlaceOfResidence");

                    b.Property<string>("RelationDegree");

                    b.Property<string>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Relatives");
                });

            modelBuilder.Entity("LKS.Data.Models.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssesmentId");

                    b.Property<string>("AvarageScore");

                    b.Property<string>("Birthday");

                    b.Property<string>("BloodType");

                    b.Property<string>("CapSize");

                    b.Property<string>("Citizenship");

                    b.Property<string>("ClothihgSize");

                    b.Property<string>("Collness");

                    b.Property<string>("ConditionsOfEducation");

                    b.Property<string>("DateOfOrder");

                    b.Property<bool>("Exhortation");

                    b.Property<string>("Faculty");

                    b.Property<string>("FamiliStatys");

                    b.Property<string>("Fighting");

                    b.Property<string>("FirstName");

                    b.Property<string>("ForeignLanguage");

                    b.Property<string>("Growth");

                    b.Property<string>("HomePhone");

                    b.Property<string>("ImagePath");

                    b.Property<string>("InstGroup");

                    b.Property<int>("Kurs");

                    b.Property<string>("LanguageRank");

                    b.Property<string>("LastName");

                    b.Property<string>("MaskSize");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Military");

                    b.Property<string>("MobilePhone");

                    b.Property<string>("Nationality");

                    b.Property<string>("Note");

                    b.Property<string>("NumberOfOrder");

                    b.Property<string>("PlaceBirthday");

                    b.Property<string>("PlaceOfRegestration");

                    b.Property<string>("PlaceOfResidence");

                    b.Property<int>("Position");

                    b.Property<bool>("ProjectOrder");

                    b.Property<string>("Rectal");

                    b.Property<string>("SboryTroopId");

                    b.Property<string>("School");

                    b.Property<string>("ShoeSize");

                    b.Property<bool>("Skill1");

                    b.Property<bool>("Skill2");

                    b.Property<bool>("Skill3");

                    b.Property<bool>("Skill4");

                    b.Property<bool>("Skill5");

                    b.Property<bool>("Skill6");

                    b.Property<string>("SpecInst");

                    b.Property<int>("Status");

                    b.Property<string>("TroopId");

                    b.Property<string>("Two_MobilePhone");

                    b.Property<string>("VO");

                    b.Property<string>("WhoseOrder");

                    b.Property<string>("YearOfAddMAI");

                    b.Property<string>("YearOfAddVK");

                    b.Property<string>("YearOfEndMAI");

                    b.Property<string>("YearOfEndVK");

                    b.Property<bool>("Zapas");

                    b.HasKey("Id");

                    b.HasIndex("AssesmentId");

                    b.HasIndex("SboryTroopId");

                    b.HasIndex("TroopId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LKS.Data.Models.SummerSbory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BmpFull");

                    b.Property<string>("BmpKr");

                    b.Property<string>("DateBeginSbori");

                    b.Property<string>("DateEndSbori");

                    b.Property<string>("DateExamen");

                    b.Property<string>("DateOfOrder");

                    b.Property<string>("DatePrisyaga");

                    b.Property<string>("LocationVK");

                    b.Property<string>("NumberVK");

                    b.Property<string>("NumberofOrder");

                    b.Property<string>("TextOrder");

                    b.HasKey("Id");

                    b.ToTable("Summers");
                });

            modelBuilder.Entity("LKS.Data.Models.Template", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryId")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.Property<string>("URI")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("LKS.Data.Models.Troop", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArrivalDay");

                    b.Property<string>("CycleId")
                        .IsRequired();

                    b.Property<bool>("IsSboriTroop");

                    b.Property<string>("NumberTroop")
                        .IsRequired();

                    b.Property<string>("PlatoonCommanderId");

                    b.Property<string>("PrepodId");

                    b.HasKey("Id");

                    b.HasIndex("CycleId");

                    b.HasIndex("NumberTroop")
                        .IsUnique();

                    b.HasIndex("PlatoonCommanderId");

                    b.HasIndex("PrepodId");

                    b.ToTable("Troops");
                });

            modelBuilder.Entity("LKS.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Role")
                        .IsRequired();

                    b.Property<string>("TroopId");

                    b.HasKey("Id");

                    b.HasIndex("TroopId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = "557dd927-fa3a-4245-a952-9820194c05c7", Login = "Admin", Password = "P@ssw0rdAdmin", Role = "Admin" }
                    );
                });

            modelBuilder.Entity("LKS.Data.Models.Category", b =>
                {
                    b.HasOne("LKS.Data.Models.Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("LKS.Data.Models.Relative", b =>
                {
                    b.HasOne("LKS.Data.Models.Student", "Student")
                        .WithMany("Relatives")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("LKS.Data.Models.Student", b =>
                {
                    b.HasOne("LKS.Data.Models.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssesmentId");

                    b.HasOne("LKS.Data.Models.Troop", "SboryTroop")
                        .WithMany("SboryStudents")
                        .HasForeignKey("SboryTroopId");

                    b.HasOne("LKS.Data.Models.Troop", "Troop")
                        .WithMany("UniversityStudents")
                        .HasForeignKey("TroopId");
                });

            modelBuilder.Entity("LKS.Data.Models.Template", b =>
                {
                    b.HasOne("LKS.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LKS.Data.Models.Troop", b =>
                {
                    b.HasOne("LKS.Data.Models.Cycle", "Cycle")
                        .WithMany("Troops")
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LKS.Data.Models.Student", "PlatoonCommander")
                        .WithMany()
                        .HasForeignKey("PlatoonCommanderId");

                    b.HasOne("LKS.Data.Models.Prepod", "Prepod")
                        .WithMany("Troops")
                        .HasForeignKey("PrepodId");
                });
#pragma warning restore 612, 618
        }
    }
}
